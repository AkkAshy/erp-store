# Generated by Django 5.2.1 on 2025-09-17 08:07

import django.core.validators
import django.db.models.deletion
from decimal import Decimal
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('stores', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AttributeType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='Название')),
                ('slug', models.SlugField(max_length=100, unique=True, verbose_name='Слаг')),
                ('is_filterable', models.BooleanField(default=False, verbose_name='Фильтруемый ли?')),
            ],
            options={
                'verbose_name': 'Тип атрибута',
                'verbose_name_plural': 'Типы атрибутов',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='SizeChart',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='Название')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Описание')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
            ],
            options={
                'verbose_name': 'Таблица размеров',
                'verbose_name_plural': 'Таблицы размеров',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='AttributeValue',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.CharField(max_length=225, verbose_name='Значение')),
                ('slug', models.SlugField(max_length=225, unique=True, verbose_name='Слаг')),
                ('ordering', models.PositiveIntegerField(default=0, verbose_name='Порядок')),
                ('attribute_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='values', to='inventory.attributetype', verbose_name='Тип атрибута')),
            ],
            options={
                'verbose_name': 'Значение атрибута',
                'verbose_name_plural': 'Значения атрибутов',
                'ordering': ['ordering', 'value'],
                'unique_together': {('attribute_type', 'slug')},
            },
        ),
        migrations.CreateModel(
            name='CustomUnit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Например: Дюйм, Галлон, Коробка', max_length=50, verbose_name='Полное название')),
                ('short_name', models.CharField(help_text='Например: дюйм, гал, кор', max_length=10, verbose_name='Сокращение')),
                ('allow_decimal', models.BooleanField(default=False, help_text='Можно ли продавать 1.5 единицы', verbose_name='Разрешить дробные')),
                ('min_quantity', models.DecimalField(decimal_places=3, default=1, max_digits=10, verbose_name='Минимум для продажи')),
                ('step', models.DecimalField(decimal_places=3, default=1, help_text='Например: 0.1, 0.5, 1', max_digits=10, verbose_name='Шаг изменения')),
                ('store', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_set', to='stores.store', verbose_name='Магазин')),
            ],
            options={
                'verbose_name': 'Единица измерения',
                'verbose_name_plural': 'Единицы измерения',
                'unique_together': {('store', 'short_name')},
            },
        ),
        migrations.CreateModel(
            name='ProductCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Название')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('deleted_at', models.DateTimeField(blank=True, null=True, verbose_name='Дата удаления')),
                ('store', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_set', to='stores.store', verbose_name='Магазин')),
            ],
            options={
                'verbose_name': 'Категория товара',
                'verbose_name_plural': 'Категории товаров',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Название')),
                ('barcode', models.CharField(blank=True, db_index=True, max_length=100, null=True, unique=True, verbose_name='Штрих-код')),
                ('unit_type', models.CharField(blank=True, choices=[('piece', 'Штука'), ('meter', 'Метр'), ('m2', 'Кв.метр'), ('kg', 'Килограмм'), ('liter', 'Литр'), ('pack', 'Упаковка'), ('set', 'Комплект')], max_length=20, null=True, verbose_name='Системная единица')),
                ('override_min_quantity', models.DecimalField(blank=True, decimal_places=3, max_digits=10, null=True, verbose_name='Свой минимум продажи')),
                ('override_step', models.DecimalField(blank=True, decimal_places=3, max_digits=10, null=True, verbose_name='Свой шаг')),
                ('sale_price', models.DecimalField(decimal_places=2, max_digits=12, verbose_name='Рекомендованная цена продажи')),
                ('has_sizes', models.BooleanField(default=False, help_text='Например: трубы разных диаметров', verbose_name='Имеет размеры/варианты')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('image_label', models.ImageField(blank=True, null=True, upload_to='product_labels/', verbose_name='Изображение этикетки')),
                ('is_deleted', models.BooleanField(default=False, help_text='Мягкое удаление - товар скрыт, но сохранен для истории', verbose_name='Удален')),
                ('deleted_at', models.DateTimeField(blank=True, null=True, verbose_name='Дата удаления')),
                ('attributes', models.ManyToManyField(blank=True, related_name='products', to='inventory.attributevalue', verbose_name='Атрибуты')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='products_created', to=settings.AUTH_USER_MODEL, verbose_name='Создан пользователем')),
                ('custom_unit', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='inventory.customunit', verbose_name='Пользовательская единица')),
                ('store', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_set', to='stores.store', verbose_name='Магазин')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='products', to='inventory.productcategory', verbose_name='Категория')),
            ],
            options={
                'verbose_name': 'Товар',
                'verbose_name_plural': 'Товары',
            },
        ),
        migrations.CreateModel(
            name='SizeInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('size', models.CharField(help_text='Например: 1/2", 3/4", 20мм, DN15', max_length=50, verbose_name='Размер/Вариант')),
                ('dimension1', models.DecimalField(blank=True, decimal_places=3, help_text='Например: внутренний диаметр (мм)', max_digits=10, null=True, verbose_name='Параметр 1')),
                ('dimension2', models.DecimalField(blank=True, decimal_places=3, help_text='Например: внешний диаметр (мм)', max_digits=10, null=True, verbose_name='Параметр 2')),
                ('dimension3', models.DecimalField(blank=True, decimal_places=3, help_text='Например: толщина стенки (мм)', max_digits=10, null=True, verbose_name='Параметр 3')),
                ('dimension1_label', models.CharField(blank=True, default='Внутр. диаметр', max_length=50, null=True, verbose_name='Название параметра 1')),
                ('dimension2_label', models.CharField(blank=True, default='Внешн. диаметр', max_length=50, null=True, verbose_name='Название параметра 2')),
                ('dimension3_label', models.CharField(blank=True, default='Толщина стенки', max_length=50, null=True, verbose_name='Название параметра 3')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Описание')),
                ('sort_order', models.IntegerField(default=0, verbose_name='Порядок сортировки')),
                ('deleted_at', models.DateTimeField(blank=True, null=True, verbose_name='Дата удаления')),
                ('store', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_set', to='stores.store', verbose_name='Магазин')),
            ],
            options={
                'verbose_name': 'Размер/Вариант',
                'verbose_name_plural': 'Размеры/Варианты',
                'ordering': ['sort_order', 'size'],
            },
        ),
        migrations.CreateModel(
            name='ProductBatch',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.DecimalField(decimal_places=3, max_digits=12, validators=[django.core.validators.MinValueValidator(Decimal('0.001'))], verbose_name='Количество')),
                ('purchase_price', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True, verbose_name='Цена закупки за единицу')),
                ('supplier', models.CharField(blank=True, max_length=255, null=True, verbose_name='Поставщик')),
                ('invoice_number', models.CharField(blank=True, max_length=100, null=True, verbose_name='Номер накладной')),
                ('expiration_date', models.DateField(blank=True, help_text='Для герметиков, клеев и т.д.', null=True, verbose_name='Срок годности')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='batches', to='inventory.product')),
                ('store', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_set', to='stores.store', verbose_name='Магазин')),
                ('size', models.ForeignKey(blank=True, help_text='Если товар имеет размерные вариации', null=True, on_delete=django.db.models.deletion.SET_NULL, to='inventory.sizeinfo', verbose_name='Размер/Вариант')),
            ],
            options={
                'verbose_name': 'Партия товара',
                'verbose_name_plural': 'Партии товаров',
                'ordering': ['expiration_date', 'created_at'],
            },
        ),
        migrations.AddField(
            model_name='product',
            name='available_sizes',
            field=models.ManyToManyField(blank=True, related_name='products_available', to='inventory.sizeinfo', verbose_name='Доступные размеры'),
        ),
        migrations.AddField(
            model_name='product',
            name='default_size',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='products_default', to='inventory.sizeinfo', verbose_name='Основной размер'),
        ),
        migrations.CreateModel(
            name='Stock',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.DecimalField(decimal_places=3, default=0, max_digits=12, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Количество')),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('product', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='stock', to='inventory.product', verbose_name='Товар')),
                ('store', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_set', to='stores.store', verbose_name='Магазин')),
            ],
            options={
                'verbose_name': 'Остаток на складе',
                'verbose_name_plural': 'Остатки на складе',
            },
        ),
        migrations.CreateModel(
            name='ProductAttribute',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('attribute_value', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='product_attributes', to='inventory.attributevalue', verbose_name='Значение атрибута')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='product_attributes', to='inventory.product', verbose_name='Товар')),
            ],
            options={
                'verbose_name': 'Атрибут товара',
                'verbose_name_plural': 'Атрибуты товаров',
                'unique_together': {('product', 'attribute_value')},
            },
        ),
        migrations.AddConstraint(
            model_name='productcategory',
            constraint=models.UniqueConstraint(condition=models.Q(('deleted_at__isnull', True)), fields=('store', 'name'), name='unique_active_category_per_store'),
        ),
        migrations.AddConstraint(
            model_name='sizeinfo',
            constraint=models.UniqueConstraint(condition=models.Q(('deleted_at__isnull', True)), fields=('store', 'size'), name='unique_active_size_per_store'),
        ),
        migrations.AddIndex(
            model_name='product',
            index=models.Index(fields=['name', 'barcode'], name='inventory_p_name_6d311d_idx'),
        ),
        migrations.AddIndex(
            model_name='product',
            index=models.Index(fields=['store', 'name'], name='inventory_p_store_i_f8e704_idx'),
        ),
        migrations.AddIndex(
            model_name='product',
            index=models.Index(fields=['store', 'barcode'], name='inventory_p_store_i_bd55a4_idx'),
        ),
        migrations.AddIndex(
            model_name='product',
            index=models.Index(fields=['is_deleted'], name='inventory_p_is_dele_1f66ff_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='product',
            unique_together={('store', 'barcode')},
        ),
    ]
